<!--This launch file will be used to start hector slam with a gazebo simulation 
You should first start a gazebo simulation of a robot with some lidar 
for example the two_wheels_description simulation -->


<launch>

  <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>

  <param name="/use_sim_time" value="false"/>

  <!--node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find myhector_slam_config)/rviz_cfg/mapping_demo.rviz"/-->

  <include file="$(find binercito)/launch/mapping_default_ok.launch"/>

  <!--include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include-->

  <!-- launches the keyboard teleoperation node to drive the two_wheels_descritption robot around -->
  <!--node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard" output="screen"/-->
  <!--node pkg="tf2_ros" type="static_transform_publisher" name="base_lidar_broadcaster" args="0 0 0.18  0 0 0 base_link  laser_frame"/-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_laser" args="0.0 0.0 0.0 0.0 0.0 0.0 base_link base_footprint" />

  <include file="$(find binercito)/launch/X4.launch" />
  <!--node pkg='binercito' name='teleop' type='Teleop.py'/-->
  <node pkg='rosserial_python' name='rosserial' type='serial_node.py' args='/dev/ttyACM0'/>
  <!--node pkg='joy' name='joy' type='joy_node'/-->

  <!-- https://wiki.ros.org/joy/Tutorials/ConfiguringALinuxJoystick -->


  <node pkg='binercito' name='avoidance' type='vivi_obstacle_avoid.py'/>

</launch>
